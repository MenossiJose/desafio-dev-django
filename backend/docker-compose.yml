version: '3.9'

services:


  db:
    image: postgres:13
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB_NAME}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB_NAME}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app_network

      
  app_pegho:
    build: .
    command: >
      sh -c "python manage.py makemigrations &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
        db:
          condition: service_healthy
          restart: true
    networks:
      - app_network

  frontend:
    container_name: react_frontend
    build:
      context: ../frontend
    command: ["npm", "start"]
    ports:
      - "3000:3000"
    volumes:
      - ../frontend:/app
      - /app/node_modules
    stdin_open: true
    tty: true
    environment:
      - CHOKIDAR_USEPOLLING=true
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  postgres_data: {}
